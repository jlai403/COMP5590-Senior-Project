@using System.Web.Optimization
@using WorkflowManagementSystem.Models.ApprovalChains
@using WorkflowManagementSystem.Views
@model ApprovalChainInputViewModel

@Styles.Render("~/Content/css/module/jquery-ui.theme.min.css")
@Styles.Render("~/Content/css/theme/create-approval-chain.css")
@Scripts.Render("~/Scripts/js/noty-wrapper.js")

<div class="container form center">
    <div class="col-md-12">
        @using (Html.BeginForm("CreateApprovalChain", "Admin", FormMethod.Post))
        {
            <div class="row center-text">
                <p class="header">Create Approval Chain</p>
            </div>

            <div class="progress-container">
                <div class="row">
                    <div class="progress">
                        <div class="progress-bar" style="width: 50%"></div>
                    </div>
                </div>
                <div class="row progress-steps">
                    <div class="col-xs-4 step-one-progress">approval chain</div>
                    <div class="col-xs-4 step-two-progress">approval chain <br/> sequence</div>
                    <div class="col-xs-4 step-complete-progress">complete</div>
                </div>
            </div>

            <div class="row" style="margin-bottom: 15px;">
                <ul class="errors center-text">
                    @if (ViewBag.ErrorMessage != null)
                    {
                        <li>@ViewBag.ErrorMessage</li>
                    }
                </ul>
            </div>

            <!-- STEP ONE -->
            <div class="step-one">
                <div class="row">
                    <div class="col-md-3">
                        Type:
                    </div>
                    <div class="col-md-9">
                        @Html.DropDownListFor(x => x.Type, Html.ConvertToSelectListItem(ApprovalChainTypes.TYPES), new {@class = "form-control"})
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-3">
                        Roles:
                    </div>
                    <div class="col-md-9">
                        <input class="add-roles form-control" placeholder="Role"/>
                        <div id="create-new-role" class="cursor" data-toggle="modal" data-target="#create-role-modal">
                            <b><i class="glyphicon glyphicon-plus" aria-hidden="true"></i></b> Create new role
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-3">
                        Active:
                    </div>
                    <div class="col-md-9">
                        @Html.CheckBoxFor(x => x.Active)
                    </div>
                </div>

                <div class="row center-text" style="padding: 0 100px; margin: 15px 0;">
                    <input class="form-control button dark-blue" type="button" value="Next"/>
                </div>
            </div>
            <!-- END STEP ONE -->

            <!-- STEP TWO -->
            <div class="step-two" style="display: none;">
                <div class="row">
                    <div class="col-md-3">
                        Sequence
                    </div>
                    <div class="col-md-9">
                        <ul id="sortable" class="roles sortable">
                        </ul>
                    </div>
                </div>

                <div class="row center-text" style="padding: 0 100px; margin: 15px 0;">
                    <input class="form-control button dark-blue" type="submit" value="Create"/>
                </div>
            </div>
            <!-- END STEP TWO -->
        }
    </div>
</div>

<!-- START CREATE ROLE MODAL -->
<div class="modal fade" id="create-role-modal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            @using (Html.BeginForm("CreateRole", "Admin", FormMethod.Post, new{id="create-role-form"}))
            {
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">Create new role</h4>
                </div>
                <div class="modal-body">
                    <div class="container-fluid form center">
                        <div class="col-md-12">

                            <div class="row">
                                <div class="col-md-3">
                                    Name:
                                </div>
                                <div class="col-md-9">
                                    <input type="text" name="Name" class="form-control" autocomplete="off"/>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary dark-blue">Create</button>
                </div>
            }
        </div>
    </div>
</div>>
<!-- END CREATE ROLE MODAL -->

<script>
    $(document).ready(function () {
        bindEventToRoleInput();
        bindAutoCompleteForRolesInput();
        showStepOne();
        setProgressBar("1%");

        $("#sortable").sortable();
        $("#sortable").disableSelection();
    });

    $("#create-role-form").submit(function (e) {
        var form = $(this);
        var result;
        $.ajax({
            url: form.attr("action"),
            type: 'post',
            dataType: "json",
            data: $(this).serialize(),
            async: false,
            success: function (data) {
                result = data.result;
            }
        });

        if (result === 'Role created') {
            showSuccessNotification(result);
            var lastAddRoleInput = $(".add-roles").last();
            lastAddRoleInput.val(form.find("input[name='Name']").val());
            addNewRoleInput(lastAddRoleInput);
            $('#create-role-modal').modal('toggle');
        } else {
            showErrorNotification(result);
        }
        return false;
    });

    function bindEventToRoleInput() {
        $(".add-roles").last().keypress(function (e) {
            $(this).off("keypress");
            addNewRoleInput($(this));
        });
    }

    function addNewRoleInput(previousRoleInput) {
        $("<input class='add-roles form-control' placeholder='Role'/>").insertAfter(previousRoleInput);
        bindEventToRoleInput();
        bindAutoCompleteForRolesInput();
    }

    function bindAutoCompleteForRolesInput() {
        $(".add-roles").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "@Url.Action("RoleNames", "Search")",
                    type: 'post',
                    dataType: "json",
                    data: {
                        keywords: request.term
                    },
                    success: function (data) {
                        response(data);
                    }
                });
            },
            minLength: 1
        });
    }

    function setProgressBar(progress) {
        $(".progress-bar").css("width", progress);
    }

    function showStepOne() {
        $(".step-one").show();
        $(".step-two").hide();
    }

    function showStepTwo() {
        $(".step-one").hide();
        $(".step-two").show();

        $(".roles.sortable").empty();
        $.each($(".add-roles"), function (i, val) {
            var roleName = $(this).val();
            if (roleName === '') return;

            var sortableItem = $("<li></li>").addClass("ui-state-default");
            var arrowIcon = $("<i class='glyphicon glyphicon-resize-vertical' aria-hidden='true' style='margin: 0 5px;'></i>");
            var hiddenInput = $("<input type='hidden' name='Roles'/>").val(roleName);

            sortableItem.append(arrowIcon);
            sortableItem.append(roleName);
            sortableItem.append(hiddenInput);
            $(".roles.sortable").append(sortableItem);
        });
        
    }

    // STEP ONE
    $(".step-one input").keydown(function () {
        // enter key
        if (event.keyCode === 13) {
            $(".step-one .button").click();
            return false;
        }
    });

    $(".step-one .button").click(function () {
        clearErrors();

        if (hasErrors()) {
            printErrors();
            return false;
        }

        showStepTwo();
        setProgressBar("50%");
        $(".step-one-progress").addClass("cursor");
        $(".step-one-progress").on("click", function (e) {
            showStepOne();
        });
        
        return true;
    });


</script>